{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","to","UserProfile","userName","memberSince","Login","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","console","log","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","debits","map","debit","date","slice","amount","description","id","addDebit","Credits","credits","credit","addCredit","App","logInInfo","newUser","currentUser","descriptionD","amountD","Number","num","length","triii","entries","w","oldDate","Date","dayVar","getDate","monVar","getMonth","yearVar","getFullYear","y","descriptionC","amountC","n","subCredArr","c","old_Date","day_Var","mon_Var","year_Var","r","a","axios","get","data","debitSum","creditSum","forEach","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15325397.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","import React, { Component } from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Bank of React!</h1>\r\n{/*\r\n  I am using Link to allow the user to click on it and transfer to another page\r\n*/}\r\n        <Link to=\"/userProfile\">User Profile  </Link>\r\n        <Link to=\"/Login\">Log In  </Link>\r\n        <Link to=\"/Debits\">Debits  </Link>\r\n        <Link to=\"/Credits\">Credits  </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <Link to=\"/\">Return to Home  </Link>\r\n        <Link to=\"/Debits\">Debits  </Link>\r\n        <Link to=\"/Credits\">Credits  </Link>\r\n        <Link to=\"/Login\">Log In  </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","import React, {Component} from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport {BrowserRouter as Route} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n    this.setState({user: updatedUser})\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    console.log(e)\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render () {\r\n    if (this.state.redirect) {\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n    return (\r\n      <div>\r\n      <Link to=\"/userProfile\">User Profile  </Link>\r\n      <Link to=\"/\">Return to Home  </Link>\r\n      <Link to=\"/Debits\">Debits  </Link>\r\n      <Link to=\"/Credits\">Credits  </Link>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Naaame</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName}/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Paaassword</label>\r\n            <input type=\"password\" name=\"password\"/>\r\n          </div>\r\n          <button>Log In!!</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Debits = (props) => {\r\n  let debitsView = () => {\r\n    const {debits} = props;\r\n    return debits.map((debit) => {\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date} </li>\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      {debitsView()}\r\n      <Link to=\"/userProfile\">User Profile  </Link>\r\n      <Link to=\"/Login\">Log In  </Link>\r\n      <Link to=\"/\">Return to Home  </Link>\r\n      <Link to=\"/Credits\">Credits  </Link>\r\n      <form onSubmit={props.addDebit}>\r\n        <input type=\"text\" name=\"description\"/>\r\n        <input type=\"number\" name=\"amount\"/>\r\n        <button type=\"submit\">Add a Debit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Debits;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Credits = (props) => {\r\n  console.log(props);\r\n  let creditsView = () => {\r\n    const {credits} = props;\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date} </li>\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Credits</h1>\r\n        {creditsView()}\r\n        <Link to=\"/userProfile\">User Profile  </Link>\r\n        <Link to=\"/Login\">Log In  </Link>\r\n        <Link to=\"/\">Return to Home  </Link>\r\n        <Link to=\"/Debits\">Debits  </Link>\r\n        <form onSubmit={props.addCredit}>\r\n          <input type=\"text\" name=\"description\"/>\r\n          <input type=\"number\" name=\"amount\"/>\r\n          <button type=\"submit\">Add a Credit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Credits;\r\n                ","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport AccountBalance from './components/AccountBalance';\nimport UserProfile from './components/UserProfile';\nimport Login from './components/Login';\nimport Debits from './components/Debits';\nimport Credits from './components/Credits';\nimport axios from 'axios';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountBalance: 100,\n      currentUser: {\n        userName: 'joe_shmo',\n        memberSince: '07/23/96',\n      debits: [],\n      credits: [],\n      }\n    }\n  }\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n  \n  async componentDidMount() {\n    let debits = await axios.get(\"https://moj-api.herokuapp.com/debits\")\n    let credits = await axios.get(\"https://moj-api.herokuapp.com/credits\")\n    \n    debits = debits.data\n    credits = credits.data\n    \n    let debitSum = 0, creditSum = 0;\n    debits.forEach((debit) => {\n      debitSum += debit.amount\n    })\n    credits.forEach((credit) => {\n      creditSum += credit.amount\n    })\n\n    let accountBalance = creditSum - debitSum;\n    this.setState({debits, credits, accountBalance});\n  }\n  \n  addDebit = (e) => {\n    e.preventDefault();\n    const descriptionD = e.target[0].value;\n    const amountD = Number(e.target[1].value);\n    console.log(descriptionD, amountD);\n\n{/*\n  57-67:\n    I am making a new array that is able to contain all of the items in the debits \n    array plus the new one that was just added by the user (I will later replace the original debits array with this new one).\n    I am then using a for loop to iterate through each of the debits array entries and \n    assign the debits array's value to the new triii array.\n*/}\n    let num = Number(this.state.debits.length);\n    let triii = [num];\n\n    for (const[w] of this.state.debits.entries()) {\n      triii[w] = this.state.debits[w];\n    }\n\n{/*\n  71-81:\n    I am now copying an arbitrary element (I just chose the 0th element) from the debits \n    array to the last/new index of triii (so that the new item can have all of the same \n    properties (amount, date, id, etc) and I will edit the properties individually to be the new item's value.\n    I am also changing the id to be a unique number (d for the addDebits and c for the addCredits, \n    along with the number of the index (11, 12, 13, etc...)).\n*/}\n    triii[num] = {...this.state.debits[0]};\n    triii[num].amount = amountD;\n    triii[num].description = descriptionD;\n    triii[num].id = triii.length+\"d\";\n{/*\n  84-93:\n    I am just using functions to re-arrange the date in the proper format, and assiging\n    that formatted date to the date property of the new triii item.\n    The last step is to use the setState function to replace the current debits array with the new one.\n*/}\n    let oldDate = new Date();\n    let dayVar = oldDate.getDate();\n    let monVar = oldDate.getMonth();\n    let yearVar = oldDate.getFullYear();\n    triii[num].date = yearVar+'-'+(monVar+1)+'-'+dayVar;\n    this.setState({debits: triii});\n\n{/*\n  The last two lines are calculating the new account balance and using the setState function\n  to replace the current accountBalance value with the updated one.\n*/}\n    let y = this.state.accountBalance - amountD;\n    this.setState({accountBalance: y});\n  }\n  \n  addCredit = (e) => {\n    e.preventDefault();\n    const descriptionC = e.target[0].value;\n    const amountC = Number(e.target[1].value);\n    console.log(descriptionC, amountC);\n    \n{/* \n  Process is the same as the addDebits function, just using credits instead of debits,\n  and adding to the accountBalance instead of subtracting.\n*/}\n    let n = this.state.credits.length;\n    let subCredArr = [n];\n    for (const[c] of this.state.credits.entries()) {\n      subCredArr[c] = this.state.credits[c];\n    }\n\n    subCredArr[n] = {...this.state.credits[0]};\n    subCredArr[n].amount = amountC;\n    subCredArr[n].description = descriptionC;\n    subCredArr[n].id = subCredArr.length+\"c\";\n    let old_Date = new Date();\n    let day_Var = old_Date.getDate();\n    let mon_Var = old_Date.getMonth();\n    let year_Var = old_Date.getFullYear();\n    subCredArr[n].date = year_Var+'-'+(mon_Var+1)+'-'+day_Var;\n    console.log(subCredArr[n]);\n    this.setState({credits: subCredArr});\n\n    let r = this.state.accountBalance + amountC;\n    this.setState({accountBalance: r});\n  }\n  \n  render() {\n    const {debits} = this.state;\n    const {credits} = this.state;\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>);\n    const LogInComponent = () => (<Login user={this.state.currentUser} mockLogIn={this.mockLogIn} />);\n    const DebitsComponent = () => (<Debits addDebit={this.addDebit} debits={debits} />);\n      const CreditsComponent = () => (<Credits addCredit={this.addCredit} credits={credits}/>);\n    return (\n      <Router basename=\"/BankReact\">\n{/*\n  I am using <div> to make the acocuntBalance show up, and I'm including line 150 in App.js's\n  render function so that the balance will be visible on all pages with the most up-to-date amount\n*/}\n      <div>\n        <AccountBalance accountBalance={this.state.accountBalance}/>\n      </div>\n        <Switch>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/Login\" render={LogInComponent}/>\n          <Route exact path=\"/Debits\" render={DebitsComponent}/>\n          <Route exact path=\"/Credits\" render={CreditsComponent}/>\n        </Switch>\n      </Router>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}